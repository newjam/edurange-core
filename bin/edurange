#!/usr/bin/env ruby

require 'edurange/core/scenario'
require 'edurange/providers/docker'

require 'semantic_logger'

SemanticLogger.default_level = :trace
SemanticLogger.add_appender(io: $stdout, formatter: :color)

def usage
  "USAGE: #{$PROGRAM_NAME} <scenario file> <command> where command is start | stop"
end

if ARGV.size < 2 then
  puts usage
  exit
end

scenario_config = Scenario.load_from_yaml_file(ARGV[0])
scenario = EDURange::Docker.foo(scenario_config)

# puts EDURange::Docker::Instance.find(scenario.instances.first)

puts scenario

case ARGV[1]
when 'start' then
  scenario.start
when 'stop' then
  scenario.stop
when 'export'
  scenario_dir = Pathname.new("./#{scenario.name}")
  scenario_dir.mkdir if not scenario_dir.exist?

  scenario.instances.each do |instance|
    instance_dir = scenario_dir + instance.name
    instance.create_build_directory(instance_dir)
  end
else
  puts usage
end

